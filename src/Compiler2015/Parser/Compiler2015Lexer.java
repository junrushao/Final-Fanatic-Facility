// Generated from Compiler2015.g4 by ANTLR 4.5
package Compiler2015.Parser;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class Compiler2015Lexer extends Lexer {
	public static final int
			T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, T__7 = 8, T__8 = 9,
			T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, T__14 = 15, T__15 = 16, T__16 = 17,
			T__17 = 18, T__18 = 19, T__19 = 20, T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24,
			T__24 = 25, T__25 = 26, T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, T__30 = 31,
			T__31 = 32, T__32 = 33, T__33 = 34, T__34 = 35, T__35 = 36, T__36 = 37, Typedef = 38,
			Semi = 39, Comma = 40, L1 = 41, R1 = 42, L2 = 43, R2 = 44, L3 = 45, R3 = 46, EQ = 47, STAR = 48,
			If = 49, Else = 50, While = 51, For = 52, OrOr = 53, AndAnd = 54, Or = 55, Caret = 56,
			And = 57, SizeOf = 58, Identifier = 59, DecimalConstant = 60, OctalConstant = 61,
			HexadecimalConstant = 62, CharacterConstant = 63, StringLiteral = 64, Preprocessing = 65,
		Whitespace=66, Newline=67, BlockComment=68, LineComment=69;
	public static final String[] ruleNames = {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
			"T__33", "T__34", "T__35", "T__36", "Typedef", "Semi", "Comma", "L1",
			"R1", "L2", "R2", "L3", "R3", "EQ", "STAR", "If", "Else", "While", "For",
			"OrOr", "AndAnd", "Or", "Caret", "And", "SizeOf", "Identifier", "IdentifierNondigit",
			"Nondigit", "Digit", "HexQuad", "DecimalConstant", "OctalConstant", "HexadecimalConstant",
			"HexadecimalPrefix", "NonzeroDigit", "OctalDigit", "HexadecimalDigit",
			"Sign", "DigitSequence", "CharacterConstant", "CharSequence", "Char",
			"EscapeSequence", "SimpleEscapeSequence", "OctalEscapeSequence", "HexadecimalEscapeSequence",
			"StringLiteral", "SCharSequence", "SChar", "CCharSequence", "CChar", "Preprocessing",
		"Whitespace", "Newline", "BlockComment", "LineComment"
	};
	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2G\u0228\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3"+
		"\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3"+
		"\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r"+
		"\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3"+
		"\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3"+
		"\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3"+
		"\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3"+
		"\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3"+
		"\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3"+
		"\65\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\38\38\39\39\3:\3:\3;"+
		"\3;\3;\3;\3;\3;\3;\3<\3<\3<\7<\u017c\n<\f<\16<\u017f\13<\3=\3=\3>\3>\3"+
		"?\3?\3@\3@\3@\3@\3@\3A\3A\7A\u018e\nA\fA\16A\u0191\13A\3B\3B\7B\u0195"+
		"\nB\fB\16B\u0198\13B\3C\3C\6C\u019c\nC\rC\16C\u019d\3D\3D\3D\3E\3E\3F"+
		"\3F\3G\3G\3H\3H\3I\6I\u01ac\nI\rI\16I\u01ad\3J\3J\3J\3J\3K\6K\u01b5\n"+
		"K\rK\16K\u01b6\3L\3L\5L\u01bb\nL\3M\3M\3M\5M\u01c0\nM\3N\3N\3N\3O\3O\3"+
		"O\3O\3O\3O\3O\3O\3O\3O\3O\5O\u01d0\nO\3P\3P\3P\3P\6P\u01d6\nP\rP\16P\u01d7"+
		"\3Q\3Q\5Q\u01dc\nQ\3Q\3Q\3R\6R\u01e1\nR\rR\16R\u01e2\3S\3S\5S\u01e7\n"+
		"S\3T\6T\u01ea\nT\rT\16T\u01eb\3U\3U\5U\u01f0\nU\3V\3V\7V\u01f4\nV\fV\16"+
		"V\u01f7\13V\3V\3V\3V\5V\u01fc\nV\3V\3V\3W\6W\u0201\nW\rW\16W\u0202\3W"+
		"\3W\3X\3X\5X\u0209\nX\3X\5X\u020c\nX\3X\3X\3Y\3Y\3Y\3Y\7Y\u0214\nY\fY"+
		"\16Y\u0217\13Y\3Y\3Y\3Y\3Y\3Y\3Z\3Z\3Z\3Z\7Z\u0222\nZ\fZ\16Z\u0225\13"+
		"Z\3Z\3Z\3\u0215\2[\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r"+
		"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63"+
		"e\64g\65i\66k\67m8o9q:s;u<w=y\2{\2}\2\177\2\u0081>\u0083?\u0085@\u0087"+
		"\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091\2\u0093A\u0095\2\u0097\2\u0099"+
		"\2\u009b\2\u009d\2\u009f\2\u00a1B\u00a3\2\u00a5\2\u00a7\2\u00a9\2\u00ab"+
		"C\u00adD\u00afE\u00b1F\u00b3G\3\2\16\6\2&&C\\aac|\3\2\62;\4\2ZZzz\3\2"+
		"\63;\3\2\629\5\2\62;CHch\4\2--//\6\2\f\f\17\17))^^\f\2$$))AA^^cdhhppt"+
		"tvvxx\6\2\f\f\17\17$$^^\4\2\f\f\17\17\4\2\13\13\"\"\u022c\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2"+
		"\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3"+
		"\2\2\2\2\u0085\3\2\2\2\2\u0093\3\2\2\2\2\u00a1\3\2\2\2\2\u00ab\3\2\2\2"+
		"\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2\2\3\u00b5"+
		"\3\2\2\2\5\u00ba\3\2\2\2\7\u00bf\3\2\2\2\t\u00c3\3\2\2\2\13\u00ca\3\2"+
		"\2\2\r\u00d0\3\2\2\2\17\u00d4\3\2\2\2\21\u00dd\3\2\2\2\23\u00e3\3\2\2"+
		"\2\25\u00ea\3\2\2\2\27\u00ed\3\2\2\2\31\u00f0\3\2\2\2\33\u00f3\3\2\2\2"+
		"\35\u00f6\3\2\2\2\37\u00f9\3\2\2\2!\u00fd\3\2\2\2#\u0101\3\2\2\2%\u0104"+
		"\3\2\2\2\'\u0107\3\2\2\2)\u010a\3\2\2\2+\u010d\3\2\2\2-\u0110\3\2\2\2"+
		"/\u0112\3\2\2\2\61\u0114\3\2\2\2\63\u0117\3\2\2\2\65\u011a\3\2\2\2\67"+
		"\u011d\3\2\2\29\u0120\3\2\2\2;\u0122\3\2\2\2=\u0124\3\2\2\2?\u0126\3\2"+
		"\2\2A\u0128\3\2\2\2C\u012b\3\2\2\2E\u012e\3\2\2\2G\u0130\3\2\2\2I\u0132"+
		"\3\2\2\2K\u0134\3\2\2\2M\u0137\3\2\2\2O\u013f\3\2\2\2Q\u0141\3\2\2\2S"+
		"\u0143\3\2\2\2U\u0145\3\2\2\2W\u0147\3\2\2\2Y\u0149\3\2\2\2[\u014b\3\2"+
		"\2\2]\u014d\3\2\2\2_\u014f\3\2\2\2a\u0151\3\2\2\2c\u0153\3\2\2\2e\u0156"+
		"\3\2\2\2g\u015b\3\2\2\2i\u0161\3\2\2\2k\u0165\3\2\2\2m\u0168\3\2\2\2o"+
		"\u016b\3\2\2\2q\u016d\3\2\2\2s\u016f\3\2\2\2u\u0171\3\2\2\2w\u0178\3\2"+
		"\2\2y\u0180\3\2\2\2{\u0182\3\2\2\2}\u0184\3\2\2\2\177\u0186\3\2\2\2\u0081"+
		"\u018b\3\2\2\2\u0083\u0192\3\2\2\2\u0085\u0199\3\2\2\2\u0087\u019f\3\2"+
		"\2\2\u0089\u01a2\3\2\2\2\u008b\u01a4\3\2\2\2\u008d\u01a6\3\2\2\2\u008f"+
		"\u01a8\3\2\2\2\u0091\u01ab\3\2\2\2\u0093\u01af\3\2\2\2\u0095\u01b4\3\2"+
		"\2\2\u0097\u01ba\3\2\2\2\u0099\u01bf\3\2\2\2\u009b\u01c1\3\2\2\2\u009d"+
		"\u01cf\3\2\2\2\u009f\u01d1\3\2\2\2\u00a1\u01d9\3\2\2\2\u00a3\u01e0\3\2"+
		"\2\2\u00a5\u01e6\3\2\2\2\u00a7\u01e9\3\2\2\2\u00a9\u01ef\3\2\2\2\u00ab"+
		"\u01f1\3\2\2\2\u00ad\u0200\3\2\2\2\u00af\u020b\3\2\2\2\u00b1\u020f\3\2"+
		"\2\2\u00b3\u021d\3\2\2\2\u00b5\u00b6\7x\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8"+
		"\7k\2\2\u00b8\u00b9\7f\2\2\u00b9\4\3\2\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc"+
		"\7j\2\2\u00bc\u00bd\7c\2\2\u00bd\u00be\7t\2\2\u00be\6\3\2\2\2\u00bf\u00c0"+
		"\7k\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2\7v\2\2\u00c2\b\3\2\2\2\u00c3\u00c4"+
		"\7u\2\2\u00c4\u00c5\7v\2\2\u00c5\u00c6\7t\2\2\u00c6\u00c7\7w\2\2\u00c7"+
		"\u00c8\7e\2\2\u00c8\u00c9\7v\2\2\u00c9\n\3\2\2\2\u00ca\u00cb\7w\2\2\u00cb"+
		"\u00cc\7p\2\2\u00cc\u00cd\7k\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7p\2\2"+
		"\u00cf\f\3\2\2\2\u00d0\u00d1\7\60\2\2\u00d1\u00d2\7\60\2\2\u00d2\u00d3"+
		"\7\60\2\2\u00d3\16\3\2\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6\7q\2\2\u00d6"+
		"\u00d7\7p\2\2\u00d7\u00d8\7v\2\2\u00d8\u00d9\7k\2\2\u00d9\u00da\7p\2\2"+
		"\u00da\u00db\7w\2\2\u00db\u00dc\7g\2\2\u00dc\20\3\2\2\2\u00dd\u00de\7"+
		"d\2\2\u00de\u00df\7t\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1\7c\2\2\u00e1\u00e2"+
		"\7m\2\2\u00e2\22\3\2\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7g\2\2\u00e5\u00e6"+
		"\7v\2\2\u00e6\u00e7\7w\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9\7p\2\2\u00e9"+
		"\24\3\2\2\2\u00ea\u00eb\7,\2\2\u00eb\u00ec\7?\2\2\u00ec\26\3\2\2\2\u00ed"+
		"\u00ee\7\61\2\2\u00ee\u00ef\7?\2\2\u00ef\30\3\2\2\2\u00f0\u00f1\7\'\2"+
		"\2\u00f1\u00f2\7?\2\2\u00f2\32\3\2\2\2\u00f3\u00f4\7-\2\2\u00f4\u00f5"+
		"\7?\2\2\u00f5\34\3\2\2\2\u00f6\u00f7\7/\2\2\u00f7\u00f8\7?\2\2\u00f8\36"+
		"\3\2\2\2\u00f9\u00fa\7>\2\2\u00fa\u00fb\7>\2\2\u00fb\u00fc\7?\2\2\u00fc"+
		" \3\2\2\2\u00fd\u00fe\7@\2\2\u00fe\u00ff\7@\2\2\u00ff\u0100\7?\2\2\u0100"+
		"\"\3\2\2\2\u0101\u0102\7(\2\2\u0102\u0103\7?\2\2\u0103$\3\2\2\2\u0104"+
		"\u0105\7`\2\2\u0105\u0106\7?\2\2\u0106&\3\2\2\2\u0107\u0108\7~\2\2\u0108"+
		"\u0109\7?\2\2\u0109(\3\2\2\2\u010a\u010b\7?\2\2\u010b\u010c\7?\2\2\u010c"+
		"*\3\2\2\2\u010d\u010e\7#\2\2\u010e\u010f\7?\2\2\u010f,\3\2\2\2\u0110\u0111"+
		"\7>\2\2\u0111.\3\2\2\2\u0112\u0113\7@\2\2\u0113\60\3\2\2\2\u0114\u0115"+
		"\7>\2\2\u0115\u0116\7?\2\2\u0116\62\3\2\2\2\u0117\u0118\7@\2\2\u0118\u0119"+
		"\7?\2\2\u0119\64\3\2\2\2\u011a\u011b\7>\2\2\u011b\u011c\7>\2\2\u011c\66"+
		"\3\2\2\2\u011d\u011e\7@\2\2\u011e\u011f\7@\2\2\u011f8\3\2\2\2\u0120\u0121"+
		"\7-\2\2\u0121:\3\2\2\2\u0122\u0123\7/\2\2\u0123<\3\2\2\2\u0124\u0125\7"+
		"\61\2\2\u0125>\3\2\2\2\u0126\u0127\7\'\2\2\u0127@\3\2\2\2\u0128\u0129"+
		"\7-\2\2\u0129\u012a\7-\2\2\u012aB\3\2\2\2\u012b\u012c\7/\2\2\u012c\u012d"+
		"\7/\2\2\u012dD\3\2\2\2\u012e\u012f\7\u0080\2\2\u012fF\3\2\2\2\u0130\u0131"+
		"\7#\2\2\u0131H\3\2\2\2\u0132\u0133\7\60\2\2\u0133J\3\2\2\2\u0134\u0135"+
		"\7/\2\2\u0135\u0136\7@\2\2\u0136L\3\2\2\2\u0137\u0138\7v\2\2\u0138\u0139"+
		"\7{\2\2\u0139\u013a\7r\2\2\u013a\u013b\7g\2\2\u013b\u013c\7f\2\2\u013c"+
		"\u013d\7g\2\2\u013d\u013e\7h\2\2\u013eN\3\2\2\2\u013f\u0140\7=\2\2\u0140"+
		"P\3\2\2\2\u0141\u0142\7.\2\2\u0142R\3\2\2\2\u0143\u0144\7*\2\2\u0144T"+
		"\3\2\2\2\u0145\u0146\7+\2\2\u0146V\3\2\2\2\u0147\u0148\7]\2\2\u0148X\3"+
		"\2\2\2\u0149\u014a\7_\2\2\u014aZ\3\2\2\2\u014b\u014c\7}\2\2\u014c\\\3"+
		"\2\2\2\u014d\u014e\7\177\2\2\u014e^\3\2\2\2\u014f\u0150\7?\2\2\u0150`"+
		"\3\2\2\2\u0151\u0152\7,\2\2\u0152b\3\2\2\2\u0153\u0154\7k\2\2\u0154\u0155"+
		"\7h\2\2\u0155d\3\2\2\2\u0156\u0157\7g\2\2\u0157\u0158\7n\2\2\u0158\u0159"+
		"\7u\2\2\u0159\u015a\7g\2\2\u015af\3\2\2\2\u015b\u015c\7y\2\2\u015c\u015d"+
		"\7j\2\2\u015d\u015e\7k\2\2\u015e\u015f\7n\2\2\u015f\u0160\7g\2\2\u0160"+
		"h\3\2\2\2\u0161\u0162\7h\2\2\u0162\u0163\7q\2\2\u0163\u0164\7t\2\2\u0164"+
		"j\3\2\2\2\u0165\u0166\7~\2\2\u0166\u0167\7~\2\2\u0167l\3\2\2\2\u0168\u0169"+
		"\7(\2\2\u0169\u016a\7(\2\2\u016an\3\2\2\2\u016b\u016c\7~\2\2\u016cp\3"+
		"\2\2\2\u016d\u016e\7`\2\2\u016er\3\2\2\2\u016f\u0170\7(\2\2\u0170t\3\2"+
		"\2\2\u0171\u0172\7u\2\2\u0172\u0173\7k\2\2\u0173\u0174\7|\2\2\u0174\u0175"+
		"\7g\2\2\u0175\u0176\7q\2\2\u0176\u0177\7h\2\2\u0177v\3\2\2\2\u0178\u017d"+
		"\5y=\2\u0179\u017c\5y=\2\u017a\u017c\5}?\2\u017b\u0179\3\2\2\2\u017b\u017a"+
		"\3\2\2\2\u017c\u017f\3\2\2\2\u017d\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e"+
		"x\3\2\2\2\u017f\u017d\3\2\2\2\u0180\u0181\5{>\2\u0181z\3\2\2\2\u0182\u0183"+
		"\t\2\2\2\u0183|\3\2\2\2\u0184\u0185\t\3\2\2\u0185~\3\2\2\2\u0186\u0187"+
		"\5\u008dG\2\u0187\u0188\5\u008dG\2\u0188\u0189\5\u008dG\2\u0189\u018a"+
		"\5\u008dG\2\u018a\u0080\3\2\2\2\u018b\u018f\5\u0089E\2\u018c\u018e\5}"+
		"?\2\u018d\u018c\3\2\2\2\u018e\u0191\3\2\2\2\u018f\u018d\3\2\2\2\u018f"+
		"\u0190\3\2\2\2\u0190\u0082\3\2\2\2\u0191\u018f\3\2\2\2\u0192\u0196\7\62"+
		"\2\2\u0193\u0195\5\u008bF\2\u0194\u0193\3\2\2\2\u0195\u0198\3\2\2\2\u0196"+
		"\u0194\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0084\3\2\2\2\u0198\u0196\3\2"+
		"\2\2\u0199\u019b\5\u0087D\2\u019a\u019c\5\u008dG\2\u019b\u019a\3\2\2\2"+
		"\u019c\u019d\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u0086"+
		"\3\2\2\2\u019f\u01a0\7\62\2\2\u01a0\u01a1\t\4\2\2\u01a1\u0088\3\2\2\2"+
		"\u01a2\u01a3\t\5\2\2\u01a3\u008a\3\2\2\2\u01a4\u01a5\t\6\2\2\u01a5\u008c"+
		"\3\2\2\2\u01a6\u01a7\t\7\2\2\u01a7\u008e\3\2\2\2\u01a8\u01a9\t\b\2\2\u01a9"+
		"\u0090\3\2\2\2\u01aa\u01ac\5}?\2\u01ab\u01aa\3\2\2\2\u01ac\u01ad\3\2\2"+
		"\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u0092\3\2\2\2\u01af\u01b0"+
		"\7)\2\2\u01b0\u01b1\5\u00a7T\2\u01b1\u01b2\7)\2\2\u01b2\u0094\3\2\2\2"+
		"\u01b3\u01b5\5\u0097L\2\u01b4\u01b3\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6"+
		"\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u0096\3\2\2\2\u01b8\u01bb\n\t"+
		"\2\2\u01b9\u01bb\5\u0099M\2\u01ba\u01b8\3\2\2\2\u01ba\u01b9\3\2\2\2\u01bb"+
		"\u0098\3\2\2\2\u01bc\u01c0\5\u009bN\2\u01bd\u01c0\5\u009dO\2\u01be\u01c0"+
		"\5\u009fP\2\u01bf\u01bc\3\2\2\2\u01bf\u01bd\3\2\2\2\u01bf\u01be\3\2\2"+
		"\2\u01c0\u009a\3\2\2\2\u01c1\u01c2\7^\2\2\u01c2\u01c3\t\n\2\2\u01c3\u009c"+
		"\3\2\2\2\u01c4\u01c5\7^\2\2\u01c5\u01d0\5\u008bF\2\u01c6\u01c7\7^\2\2"+
		"\u01c7\u01c8\5\u008bF\2\u01c8\u01c9\5\u008bF\2\u01c9\u01d0\3\2\2\2\u01ca"+
		"\u01cb\7^\2\2\u01cb\u01cc\5\u008bF\2\u01cc\u01cd\5\u008bF\2\u01cd\u01ce"+
		"\5\u008bF\2\u01ce\u01d0\3\2\2\2\u01cf\u01c4\3\2\2\2\u01cf\u01c6\3\2\2"+
		"\2\u01cf\u01ca\3\2\2\2\u01d0\u009e\3\2\2\2\u01d1\u01d2\7^\2\2\u01d2\u01d3"+
		"\7z\2\2\u01d3\u01d5\3\2\2\2\u01d4\u01d6\5\u008dG\2\u01d5\u01d4\3\2\2\2"+
		"\u01d6\u01d7\3\2\2\2\u01d7\u01d5\3\2\2\2\u01d7\u01d8\3\2\2\2\u01d8\u00a0"+
		"\3\2\2\2\u01d9\u01db\7$\2\2\u01da\u01dc\5\u00a3R\2\u01db\u01da\3\2\2\2"+
		"\u01db\u01dc\3\2\2\2\u01dc\u01dd\3\2\2\2\u01dd\u01de\7$\2\2\u01de\u00a2"+
		"\3\2\2\2\u01df\u01e1\5\u00a5S\2\u01e0\u01df\3\2\2\2\u01e1\u01e2\3\2\2"+
		"\2\u01e2\u01e0\3\2\2\2\u01e2\u01e3\3\2\2\2\u01e3\u00a4\3\2\2\2\u01e4\u01e7"+
		"\n\13\2\2\u01e5\u01e7\5\u0099M\2\u01e6\u01e4\3\2\2\2\u01e6\u01e5\3\2\2"+
		"\2\u01e7\u00a6\3\2\2\2\u01e8\u01ea\5\u00a9U\2\u01e9\u01e8\3\2\2\2\u01ea"+
		"\u01eb\3\2\2\2\u01eb\u01e9\3\2\2\2\u01eb\u01ec\3\2\2\2\u01ec\u00a8\3\2"+
		"\2\2\u01ed\u01f0\n\t\2\2\u01ee\u01f0\5\u0099M\2\u01ef\u01ed\3\2\2\2\u01ef"+
		"\u01ee\3\2\2\2\u01f0\u00aa\3\2\2\2\u01f1\u01f5\7%\2\2\u01f2\u01f4\n\f"+
		"\2\2\u01f3\u01f2\3\2\2\2\u01f4\u01f7\3\2\2\2\u01f5\u01f3\3\2\2\2\u01f5"+
		"\u01f6\3\2\2\2\u01f6\u01fb\3\2\2\2\u01f7\u01f5\3\2\2\2\u01f8\u01fc\t\f"+
		"\2\2\u01f9\u01fa\7\17\2\2\u01fa\u01fc\7\f\2\2\u01fb\u01f8\3\2\2\2\u01fb"+
		"\u01f9\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd\u01fe\bV\2\2\u01fe\u00ac\3\2"+
		"\2\2\u01ff\u0201\t\r\2\2\u0200\u01ff\3\2\2\2\u0201\u0202\3\2\2\2\u0202"+
		"\u0200\3\2\2\2\u0202\u0203\3\2\2\2\u0203\u0204\3\2\2\2\u0204\u0205\bW"+
		"\3\2\u0205\u00ae\3\2\2\2\u0206\u0208\7\17\2\2\u0207\u0209\7\f\2\2\u0208"+
		"\u0207\3\2\2\2\u0208\u0209\3\2\2\2\u0209\u020c\3\2\2\2\u020a\u020c\7\f"+
		"\2\2\u020b\u0206\3\2\2\2\u020b\u020a\3\2\2\2\u020c\u020d\3\2\2\2\u020d"+
		"\u020e\bX\3\2\u020e\u00b0\3\2\2\2\u020f\u0210\7\61\2\2\u0210\u0211\7,"+
		"\2\2\u0211\u0215\3\2\2\2\u0212\u0214\13\2\2\2\u0213\u0212\3\2\2\2\u0214"+
		"\u0217\3\2\2\2\u0215\u0216\3\2\2\2\u0215\u0213\3\2\2\2\u0216\u0218\3\2"+
		"\2\2\u0217\u0215\3\2\2\2\u0218\u0219\7,\2\2\u0219\u021a\7\61\2\2\u021a"+
		"\u021b\3\2\2\2\u021b\u021c\bY\2\2\u021c\u00b2\3\2\2\2\u021d\u021e\7\61"+
		"\2\2\u021e\u021f\7\61\2\2\u021f\u0223\3\2\2\2\u0220\u0222\n\f\2\2\u0221"+
		"\u0220\3\2\2\2\u0222\u0225\3\2\2\2\u0223\u0221\3\2\2\2\u0223\u0224\3\2"+
		"\2\2\u0224\u0226\3\2\2\2\u0225\u0223\3\2\2\2\u0226\u0227\bZ\2\2\u0227"+
		"\u00b4\3\2\2\2\32\2\u017b\u017d\u018f\u0196\u019d\u01ad\u01b6\u01ba\u01bf"+
		"\u01cf\u01d7\u01db\u01e2\u01e6\u01eb\u01ef\u01f5\u01fb\u0202\u0208\u020b"+
		"\u0215\u0223\4\2\3\2\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
			new PredictionContextCache();
	private static final String[] _LITERAL_NAMES = {
			null, "'void'", "'char'", "'int'", "'struct'", "'union'", "'...'", "'continue'",
			"'break'", "'return'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='",
			"'>>='", "'&='", "'^='", "'|='", "'=='", "'!='", "'<'", "'>'", "'<='",
			"'>='", "'<<'", "'>>'", "'+'", "'-'", "'/'", "'%'", "'++'", "'--'", "'~'",
			"'!'", "'.'", "'->'", "'typedef'", "';'", "','", "'('", "')'", "'['",
			"']'", "'{'", "'}'", "'='", "'*'", "'if'", "'else'", "'while'", "'for'",
			"'||'", "'&&'", "'|'", "'^'", "'&'", "'sizeof'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
			null, null, null, null, null, null, null, null, null, null, null, null,
			null, null, null, null, null, null, null, null, null, null, null, null,
			null, null, null, null, null, null, null, null, null, null, null, null,
			null, null, "Typedef", "Semi", "Comma", "L1", "R1", "L2", "R2", "L3",
			"R3", "EQ", "STAR", "If", "Else", "While", "For", "OrOr", "AndAnd", "Or",
			"Caret", "And", "SizeOf", "Identifier", "DecimalConstant", "OctalConstant",
			"HexadecimalConstant", "CharacterConstant", "StringLiteral", "Preprocessing",
			"Whitespace", "Newline", "BlockComment", "LineComment"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);
	public static String[] modeNames = {
			"DEFAULT_MODE"
	};

	static {
		RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION);
	}

	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}

	public Compiler2015Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache);
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() {
		return "Compiler2015.g4";
	}

	@Override
	public String[] getRuleNames() {
		return ruleNames;
	}

	@Override
	public String getSerializedATN() {
		return _serializedATN;
	}

	@Override
	public String[] getModeNames() {
		return modeNames;
	}

	@Override
	public ATN getATN() {
		return _ATN;
	}
}